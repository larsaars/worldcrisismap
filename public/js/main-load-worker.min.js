function generateRandomColor(){return"#"+Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")}function generateRandomColors(){var e=[];for(const r of arguments){var a=[];for(let e=0;e<r;e++)a.push(generateRandomColor());e.push(a)}return e}async function buildGeoJSON(e,o,n){let s={type:"FeatureCollection",features:[]};return await Promise.all(e.map(async(e,a)=>{for(const r of await Promise.all(e.map(async a=>{try{return await(await fetch("/"+a,{cache:"force-cache"})).json()}catch(e){console.error(e),console.error("Error finding or parsing geojson file: "+a)}return{}})))for(const t of"FeatureCollection"===r.type?r.features:[r])t.properties={},t.properties.fill=o[a],t.properties.eventIndex=a,t.properties.source=n,s.features.push(t)})),s}self.addEventListener("message",async function(e){var a=e.data.timestamp||"0",r=e.data.dateOfTimestamp,t="true"===e.data.onlyNewData?"new":"all",t="/api/data/"+["disaster","report","news"][e.data.source]+"/"+t+"/"+a,a=await(await fetch(t)).json(),o=[];for(const s of a)s.daysSinceEvent=Math.floor((r-new Date(s.date))/864e5),o.push(JSON.parse(s.geojson));var[t]=generateRandomColors(a.length),n=await buildGeoJSON(o,t,e.data.source);self.postMessage({source:e.data.source,serverData:a,geoJSON:n,colors:t})});