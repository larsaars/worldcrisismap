function generateRandomColor(){return"#"+Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")}function generateRandomColors(){var e=[];for(const t of arguments){var a=[];for(let e=0;e<t;e++)a.push(generateRandomColor());e.push(a)}return e}async function buildGeoJSON(e,r,n){let s={type:"FeatureCollection",features:[]};return await Promise.all(e.map(async(e,a)=>{for(const t of await Promise.all(e.map(async a=>{try{return await(await fetch("/"+a,{cache:"force-cache"})).json()}catch(e){console.error(e),console.error("Error finding or parsing geojson file: "+a)}return{}})))for(const o of"FeatureCollection"===t.type?t.features:[t])o.properties={},o.properties.fill=r[a],o.properties.eventIndex=a,o.properties.source=n,s.features.push(o)})),s}self.addEventListener("message",async function(e){if(e.data){var a=e.data.timestamp||"0",t=e.data.useGeoJSON,o=e.data.dateOfTimestamp,r="true"===e.data.onlyNewData?"new":"all",r="/api/data/"+["disaster","report","news"][e.data.source]+"/"+r+"/"+a,a=await(await fetch(r)).json(),n=[];for(const i of a)i.daysSinceEvent=Math.floor((o-new Date(i.date))/864e5),t&&n.push(JSON.parse(i.geojson));var[r]=generateRandomColors(a.length),s=t?await buildGeoJSON(n,r,e.data.source):null;self.postMessage({source:e.data.source,serverData:a,geoJSON:s,colors:r})}});